<% layout('layouts/boilerplate')%>

<link href="https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css" rel="stylesheet" />
<script src="https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js"></script>

<link rel="stylesheet" href="/stylesheets/campground-show.css" />
<link rel="stylesheet" href="/stylesheets/imageModal.css" />
<link rel="stylesheet" href="/stylesheets/stars.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/starability/1.1.0/starability-all.min.css" />

<!-- Modals -->
<div class="modal fade" id="deleteCampgroundModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Delete Campground</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this campground?</p>
        <p class="text-danger"><small>This action cannot be undone</small></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <form action="/campgrounds/<%= campground._id %>?_method=DELETE" method="POST">
          <button class="btn btn-danger">Delete</button>
        </form>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="deleteReviewModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Delete Review</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this review?</p>
        <p class="text-danger"><small>This action cannot be undone</small></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <form id="deleteReviewForm" method="POST">
          <input type="hidden" name="_method" value="DELETE" />
          <button type="submit" class="btn btn-danger">Delete</button>
        </form>
      </div>
    </div>
  </div>
</div>

<div class="show-page">
  <div class="show-container">
    
    <!-- Page Header -->
    <div class="page-header">
      <h1 class="page-title"><%= campground.title %></h1>
      <div class="page-meta">
        <div class="location-info">
          <i class="fas fa-map-marker-alt"></i>
          <span><%= campground.location %></span>
        </div>
        <div class="price-info">
          <span class="price">$<%= campground.price %></span>
          <span class="price-label">per night</span>
        </div>
      </div>
    </div>

    <!-- Main Content - Full Width -->
    <div class="main-content">
      <!-- Image Gallery -->
      <% if (campground.images && campground.images.length > 0) { %>
      <div class="content-card image-gallery">
        <div class="gallery-main">
          <img src="<%= campground.images[0].url %>" alt="<%= campground.title %>" id="mainImage">
        </div>
        <% if (campground.images.length > 1) { %>
        <div class="gallery-thumbnails">
          <% campground.images.forEach((img, i) => { %>
          <div class="thumbnail <%= i === 0 ? 'active' : '' %>" data-image-url="<%= img.url %>">
            <img src="<%= img.url %>" alt="Image <%= i + 1 %>">
          </div>
          <% }) %>
        </div>
        <% } %>
      </div>
      <% } %>

      <!-- Two Column Layout for Details and Map -->
      <div class="details-map-row">
        <div class="details-column">
          <!-- Campground Details -->
          <div class="content-card campground-details">
            <h2><i class="fas fa-info-circle"></i> About This Campground</h2>
            
            <div class="detail-grid">
              <div class="detail-item">
                <div class="detail-icon">
                  <i class="fas fa-map-marker-alt"></i>
                </div>
                <div class="detail-content">
                  <h4>Location</h4>
                  <p><%= campground.location %></p>
                </div>
              </div>
              
              <div class="detail-item">
                <div class="detail-icon">
                  <i class="fas fa-dollar-sign"></i>
                </div>
                <div class="detail-content">
                  <h4>Price</h4>
                  <p>$<%= campground.price %> per night</p>
                </div>
              </div>
              
              <div class="detail-item">
                <div class="detail-icon">
                  <i class="fas fa-user"></i>
                </div>
                <div class="detail-content">
                  <h4>Host</h4>
                  <p><%= campground.author && campground.author.username ? campground.author.username : 'Unknown User' %></p>
                </div>
              </div>
              
              <div class="detail-item">
                <div class="detail-icon">
                  <i class="fas fa-calendar-alt"></i>
                </div>
                <div class="detail-content">
                  <h4>Added</h4>
                  <p><%= new Date(campground.createdAt).toLocaleDateString("en-US", { year: 'numeric', month: 'short', day: 'numeric' }) %></p>
                </div>
              </div>
            </div>

            <div class="description">
              <%= campground.description %>
            </div>

            <!-- Action Buttons -->
            <% if (currentUser && campground.author && String(campground.author._id) === String(currentUser._id)) { %>
            <div class="action-buttons">
              <a href="/campgrounds/<%= campground._id %>/edit" class="btn-action btn-primary-action">
                <i class="fas fa-edit"></i>
                <span>Edit Campground</span>
              </a>
              <button class="btn-action btn-danger-action" data-bs-toggle="modal" data-bs-target="#deleteCampgroundModal">
                <i class="fas fa-trash"></i>
                <span>Delete Campground</span>
              </button>
            </div>
            <% } %>
          </div>
        </div>

        <div class="map-column">
          <!-- Map -->
          <div class="content-card">
            <h2><i class="fas fa-map"></i> Location</h2>
            <div class="map-container">
              <div id="map"></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Reviews Section - Full Width at Bottom -->
    <div class="reviews-section-bottom">
      <div class="content-card reviews-section">
        <div class="reviews-header">
          <h2 class="reviews-title">Reviews</h2>
          <% if (campground.reviews && campground.reviews.length > 0) { %>
          <div class="reviews-stats">
            <span><%= campground.reviews.length %> review<%= campground.reviews.length === 1 ? '' : 's' %></span>
          </div>
          <% } %>
        </div>

        <!-- Review Form -->
        <% if(currentUser) { %>
        <div class="review-form">
          <h3>Leave a Review</h3>
          <form action="/campgrounds/<%= campground._id %>/reviews" method="POST" class="validated-form" novalidate>
            <div class="form-group">
              <label class="form-label">Rating</label>
              <fieldset class="starability-heart" required>
                <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" aria-label="No rating." />
                <input type="radio" id="rate5" name="review[rating]" value="5" />
                <label for="rate5" title="Amazing">5 stars</label>
                <input type="radio" id="rate4" name="review[rating]" value="4" />
                <label for="rate4" title="Good">4 stars</label>
                <input type="radio" id="rate3" name="review[rating]" value="3" />
                <label for="rate3" title="Average">3 stars</label>
                <input type="radio" id="rate2" name="review[rating]" value="2" />
                <label for="rate2" title="Not good">2 stars</label>
                <input type="radio" id="rate1" name="review[rating]" value="1" />
                <label for="rate1" title="Bad">1 star</label>
              </fieldset>
            </div>
            
            <div class="form-group">
              <label class="form-label" for="body">Your Review</label>
              <textarea class="form-control" name="review[body]" id="body" rows="4" required placeholder="Share your experience at this campground..."></textarea>
            </div>
            
            <button type="submit" class="btn-submit">
              <i class="fas fa-paper-plane me-2"></i>Submit Review
            </button>
          </form>
        </div>
        <% } %>

        <!-- Reviews Grid -->
        <% if (campground.reviews && campground.reviews.length > 0) { %>
        <div class="reviews-grid">
          <% const sortedReviews = (campground.reviews || []).slice().sort((a,b) => new Date(b.createdAt) - new Date(a.createdAt)); %>
          <% for(let review of sortedReviews) { %>
          <div class="review-card">
            <div class="review-header">
              <div class="reviewer-info">
                <div class="reviewer-avatar">
                  <%= review.author && review.author.username ? review.author.username.charAt(0).toUpperCase() : 'U' %>
                </div>
                <div class="reviewer-details">
                  <h4><%= review.author ? review.author.username : 'Unknown' %></h4>
                  <div class="review-date">
                    <%= new Date(review.createdAt).toLocaleDateString("en-US", { year: 'numeric', month: 'short', day: 'numeric' }) %>
                  </div>
                </div>
              </div>
              <div class="review-rating">
                <div class="starability-result" data-rating="<%= review.rating %>">
                  Rated: <%= review.rating %> stars
                </div>
              </div>
            </div>
            
            <div class="review-text">
              <%= review.body %>
            </div>

            <% if (currentUser && review.author && String(review.author._id) === String(currentUser._id)) { %>
            <div class="review-actions">
              <button class="btn-review-action btn-delete-review delete-review-btn"
                  data-campground-id="<%= campground._id %>"
                  data-review-id="<%= review._id %>"
                  data-bs-toggle="modal"
                  data-bs-target="#deleteReviewModal">
                <i class="fas fa-trash me-1"></i>Delete
              </button>
            </div>
            <% } %>
          </div>
          <% } %>
        </div>
        <% } else { %>
          <div class="empty-reviews">
            <i class="fas fa-comments"></i>
            <h3>No reviews yet</h3>
            <p>Be the first to share your experience!</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<!-- Image Modal -->
<div class="fullscreen-modal">
  <span class="close-button">&times;</span>
  <img class="fullscreen-image" src="" alt="Fullscreen image" />
  <div class="navigation-buttons">
    <button class="nav-btn prev-btn">&lt;</button>
    <button class="nav-btn next-btn">&gt;</button>
  </div>
</div>

<!-- Mobile-only CSS fix for reviewer header layout -->
<style>
@media (max-width: 768px) {
  .review-header { flex-direction: row !important; align-items: flex-start !important; gap: 1rem !important; }
  .reviewer-info { display: flex !important; flex-direction: row !important; align-items: center !important; gap: .75rem !important; flex: 1 1 auto !important; min-width: 0 !important; }
  .reviewer-details { flex: 1 1 auto !important; min-width: 0 !important; }
  .reviewer-details h4 { white-space: nowrap !important; overflow: hidden !important; text-overflow: ellipsis !important; max-width: 180px !important; }
  .review-rating { flex-shrink: 0 !important; }
}
</style>

<!-- Scripts -->
<script>
  const mapToken = '<%- process.env.MAPBOX_TOKEN %>';
  const campground = <%- JSON.stringify(campground) %>;

  // Image gallery functionality and review deletion
  document.addEventListener("DOMContentLoaded", function () {
    // Image gallery
    const thumbnails = document.querySelectorAll('.thumbnail');
    const mainImage = document.getElementById('mainImage');
    
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        const imageUrl = this.getAttribute('data-image-url');
        if (mainImage && imageUrl) {
          mainImage.src = imageUrl;
          thumbnails.forEach(t => t.classList.remove('active'));
          this.classList.add('active');
        }
      });
    });

    // Review form submit: disable button on valid submit (like delete confirm)
    const reviewForm = document.querySelector('.reviews-section .validated-form');
    if (reviewForm) {
      const reviewSubmitBtn = reviewForm.querySelector('.btn-submit');
      const ratingRadios = reviewForm.querySelectorAll('input[name="review[rating]"]');
      if (ratingRadios.length) {
        // ensure group validity
        ratingRadios[0].setAttribute('required', 'required');
      }
      reviewForm.addEventListener('submit', function(e) {
        if (reviewForm.checkValidity && !reviewForm.checkValidity()) {
          e.preventDefault();
          e.stopPropagation();
          reviewForm.classList.add('was-validated');
          return;
        }
        if (reviewSubmitBtn) {
          reviewSubmitBtn.disabled = true;
          reviewSubmitBtn.classList.add('disabled');
          reviewSubmitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Submitting...';
        }
      });
    }

    // Review deletion: set form action and disable trigger
    const deleteButtons = document.querySelectorAll(".delete-review-btn");
    deleteButtons.forEach((button) => {
      button.addEventListener("click", function () {
        const campgroundId = this.getAttribute("data-campground-id");
        const reviewId = this.getAttribute("data-review-id");
        const form = document.querySelector("#deleteReviewForm");
        if (campgroundId && reviewId && form) {
          form.action = `/campgrounds/${campgroundId}/reviews/${reviewId}?_method=DELETE`;
        }
        // Disable trigger immediately to prevent double activation
        this.disabled = true;
        const modal = document.getElementById('deleteReviewModal');
        if (modal) {
          modal.addEventListener('hidden.bs.modal', () => { this.disabled = false; }, { once: true });
        }
      });
    });

    // Modal delete confirms: disable buttons on SUBMIT (not click) to avoid canceling default submit
    const deleteReviewForm = document.getElementById('deleteReviewForm');
    if (deleteReviewForm) {
      const deleteReviewConfirmBtn = deleteReviewForm.querySelector('button[type="submit"]');
      const reviewModal = document.getElementById('deleteReviewModal');
      const resetReviewConfirm = () => {
        if (deleteReviewConfirmBtn) {
          deleteReviewConfirmBtn.disabled = false;
          deleteReviewConfirmBtn.classList.remove('disabled');
          deleteReviewConfirmBtn.textContent = 'Delete';
        }
      };
      deleteReviewForm.addEventListener('submit', function () {
        if (deleteReviewConfirmBtn) {
          deleteReviewConfirmBtn.disabled = true;
          deleteReviewConfirmBtn.classList.add('disabled');
          deleteReviewConfirmBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Deleting...';
        }
      });
      if (reviewModal) {
        reviewModal.addEventListener('hidden.bs.modal', resetReviewConfirm);
      }
    }

    const deleteCampForm = document.querySelector('#deleteCampgroundModal form');
    if (deleteCampForm) {
      const deleteCampConfirmBtn = deleteCampForm.querySelector('button[type="submit"], .btn.btn-danger');
      const campModal = document.getElementById('deleteCampgroundModal');
      const resetCampConfirm = () => {
        if (deleteCampConfirmBtn) {
          deleteCampConfirmBtn.disabled = false;
          deleteCampConfirmBtn.classList.remove('disabled');
          deleteCampConfirmBtn.textContent = 'Delete';
        }
      };
      deleteCampForm.addEventListener('submit', function () {
        if (deleteCampConfirmBtn) {
          deleteCampConfirmBtn.disabled = true;
          deleteCampConfirmBtn.classList.add('disabled');
          deleteCampConfirmBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Deleting...';
        }
      });
      if (campModal) {
        campModal.addEventListener('hidden.bs.modal', resetCampConfirm);
      }
    }
  });
</script>

<script src="/javascripts/imageModal.js"></script>
<script src="/javascripts/showPageMap.js"></script>